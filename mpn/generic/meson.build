mpn_conf_data.set('HAVE_CALLING_CONVENTIONS', 1)

if host_machine.endian() == 'big'
    endian_vars = ['HAVE_DOUBLE_IEEE_BIG_ENDIAN', 'HAVE_LIMB_BIG_ENDIAN']
else
    endian_vars = ['HAVE_DOUBLE_IEEE_LITTLE_ENDIAN', 'HAVE_LIMB_LITTLE_ENDIAN']
endif

foreach v : endian_vars
    mpn_conf_data.set(v, 1)
endforeach


mpn_hdr_map = {
    'gmp-mparam.h': 'mpn/generic/gmp-mparam.h.in',
    'longlong_inc.h': 'mpn/generic/longlong_inc.h.in'
}

# Some sources define a function which might get replaced at compile time by a
# native version, those go in the dictionary below. Regular sources go here.
mpn_src = [
    'mpn/generic/mp_bases.c',
    'mpn/generic/comb_tables.c',
    'mpn/generic/fib_table.c',
]

mpn_src_map = {
    'add': 'mpn/generic/add.c',
    'add_1': 'mpn/generic/add_1.c',
    'add_err1_n': 'mpn/generic/add_err1_n.c',
    'add_err2_n': 'mpn/generic/add_err2_n.c',
    'add_n': 'mpn/generic/add_n.c',
    'addadd_n': 'mpn/generic/addadd_n.c',
    'addmul_1': 'mpn/generic/addmul_1.c',
    'addsub_n': 'mpn/generic/addsub_n.c',
    'and_n': 'mpn/generic/and_n.c',
    'andn_n': 'mpn/generic/andn_n.c',
    'bdivmod': 'mpn/generic/bdivmod.c',
    'binvert': 'mpn/generic/binvert.c',
    'binvert_itch': 'mpn/generic/binvert.c',
    'cmp': 'mpn/generic/cmp.c',
    'com_n': 'mpn/generic/com_n.c',
    'copyd': 'mpn/generic/copyd.c',
    'copyi': 'mpn/generic/copyi.c',
    'dc_bdiv_q': 'mpn/generic/dc_bdiv_q.c',
    'dc_bdiv_q_n': 'mpn/generic/dc_bdiv_q_n.c',
    'dc_bdiv_qr': 'mpn/generic/dc_bdiv_qr.c',
    'dc_bdiv_qr_n': 'mpn/generic/dc_bdiv_qr_n.c',
    'dc_div_q': 'mpn/generic/dc_div_q.c',
    'dc_div_qr': 'mpn/generic/dc_div_qr.c',
    'dc_div_qr_n': 'mpn/generic/dc_div_qr_n.c',
    'dc_divappr_q': 'mpn/generic/dc_divappr_q.c',
    'divexact': 'mpn/generic/divexact.c',
    'divexact_1': 'mpn/generic/divexact_1.c',
    'divexact_by3c': 'mpn/generic/divexact_by3c.c',
    'divexact_byff': 'mpn/generic/divexact_byff.c',
    'divexact_byfobm1': 'mpn/generic/divexact_byfobm1.c',
    'divisible_p': 'mpn/generic/divisible_p.c',
    'divrem': 'mpn/generic/divrem.c',
    'divrem_1': 'mpn/generic/divrem_1.c',
    'divrem_2': 'mpn/generic/divrem_2.c',
    'divrem_euclidean_qr_1': 'mpn/generic/divrem_euclidean_qr_1.c',
    'divrem_euclidean_qr_2': 'mpn/generic/divrem_euclidean_qr_2.c',
    'divrem_euclidean_r_1': 'mpn/generic/divrem_euclidean_r_1.c',
    'mod_1_k': 'mpn/generic/divrem_euclidean_r_1.c',
    'divrem_hensel_qr_1': 'mpn/generic/divrem_hensel_qr_1.c',
    'divrem_hensel_qr_1_1': 'mpn/generic/divrem_hensel_qr_1_1.c',
    'divrem_hensel_qr_1_2': 'mpn/generic/divrem_hensel_qr_1_2.c',
    'divrem_hensel_r_1': 'mpn/generic/divrem_hensel_r_1.c',
    'divrem_hensel_rsh_qr_1': 'mpn/generic/divrem_hensel_rsh_qr_1.c',
    'divrem_hensel_rsh_qr_1_preinv': 'mpn/generic/divrem_hensel_rsh_qr_1.c',
    'dump': 'mpn/generic/dump.c',
    'fib2_ui': 'mpn/generic/fib2_ui.c',
    'gcd': 'mpn/generic/gcd.c',
    'gcd_1': 'mpn/generic/gcd_1.c',
    'gcd_subdiv_step': 'mpn/generic/gcd_subdiv_step.c',
    'gcdext': 'mpn/generic/gcdext.c',
    'gcdext_1': 'mpn/generic/gcdext_1.c',
    'gcdext_hook': 'mpn/generic/gcdext_lehmer.c',
    'gcdext_lehmer_n': 'mpn/generic/gcdext_lehmer.c',
    'get_d': 'mpn/generic/get_d.c',
    'get_str': 'mpn/generic/get_str.c',
    'hamdist': 'mpn/generic/hamdist.c',
    'hgcd': 'mpn/generic/hgcd.c',
    'hgcd_itch': 'mpn/generic/hgcd.c',
    'hgcd2': 'mpn/generic/hgcd2.c',
    'hgcd2_jacobi': 'mpn/generic/hgcd2_jacobi.c',
    'hgcd_appr': 'mpn/generic/hgcd_appr.c',
    'hgcd_appr_itch': 'mpn/generic/hgcd_appr.c',
    'hgcd_jacobi': 'mpn/generic/hgcd_jacobi.c',
    'hgcd_matrix_adjust': 'mpn/generic/hgcd_matrix.c',
    'hgcd_matrix_init': 'mpn/generic/hgcd_matrix.c',
    'hgcd_matrix_mul': 'mpn/generic/hgcd_matrix.c',
    'hgcd_matrix_mul_1': 'mpn/generic/hgcd_matrix.c',
    'hgcd_matrix_update_q': 'mpn/generic/hgcd_matrix.c',
    'hgcd_mul_matrix1_vector': 'mpn/generic/hgcd_matrix.c',
    'hgcd_reduce': 'mpn/generic/hgcd_reduce.c',
    'hgcd_reduce_itch': 'mpn/generic/hgcd_reduce.c',
    'hgcd_step': 'mpn/generic/hgcd_step.c',
    'inv_div_q': 'mpn/generic/inv_div_q.c',
    'inv_div_qr': 'mpn/generic/inv_div_qr.c',
    'inv_div_qr_n': 'mpn/generic/inv_div_qr_n.c',
    'inv_divappr_q': 'mpn/generic/inv_divappr_q.c',
    'inv_divappr_q_n': 'mpn/generic/inv_divappr_q_n.c',
    'invert': 'mpn/generic/invert.c',
    'invert_trunc': 'mpn/generic/invert.c',
    'is_invert': 'mpn/generic/invert.c',
    'ior_n': 'mpn/generic/ior_n.c',
    'iorn_n': 'mpn/generic/iorn_n.c',
    'jacobi_n': 'mpn/generic/jacobi.c',
    'jacobi_2': 'mpn/generic/jacobi_2.c',
    'jacobi_base': 'mpn/generic/jacobi_base.c',
    'lshift': 'mpn/generic/lshift.c',
    'matrix22_mul': 'mpn/generic/matrix22_mul.c',
    'matrix22_mul_itch': 'mpn/generic/matrix22_mul.c',
    'matrix22_mul_strassen': 'mpn/generic/matrix22_mul.c',
    'matrix22_mul1_inverse_vector': 'mpn/generic/matrix22_mul1_inverse_vector.c',
    'mod_1': 'mpn/generic/mod_1.c',
    'mod_1_1': 'mpn/generic/mod_1_1.c',
    'mod_1_2': 'mpn/generic/mod_1_2.c',
    'mod_1_3': 'mpn/generic/mod_1_3.c',
    'mod_34lsub1': 'mpn/generic/mod_34lsub1.c',
    'modexact_1c_odd': 'mpn/generic/modexact_1c_odd.c',
    'mul': 'mpn/generic/mul.c',
    'mul_1': 'mpn/generic/mul_1.c',
    'mul_basecase': 'mpn/generic/mul_basecase.c',
    'mul_fft': 'mpn/generic/mul_fft.c',
    'kara_mul_n': 'mpn/generic/mul_n.c',
    'kara_sqr_n': 'mpn/generic/mul_n.c',
    'mul_n': 'mpn/generic/mul_n.c',
    'sqr': 'mpn/generic/mul_n.c',
    'mulhigh_n': 'mpn/generic/mulhigh_n.c',
    'mullow_basecase': 'mpn/generic/mullow_basecase.c',
    'mullow_n': 'mpn/generic/mullow_n.c',
    'mullow_n_basecase': 'mpn/generic/mullow_n_basecase.c',
    'mulmid': 'mpn/generic/mulmid.c',
    'mulmid_basecase': 'mpn/generic/mulmid_basecase.c',
    'mulmid_n': 'mpn/generic/mulmid_n.c',
    'mulmod_2expm1': 'mpn/generic/mulmod_2expm1.c',
    'mulmod_bnm1': 'mpn/generic/mulmod_2expm1.c',
    'mulmod_2expp1_basecase': 'mpn/generic/mulmod_2expp1_basecase.c',
    'mulmod_Bexpp1': 'mpn/generic/mulmod_bexpp1.c',
    'nand_n': 'mpn/generic/nand_n.c',
    'neg_n': 'mpn/generic/neg_n.c',
    'nior_n': 'mpn/generic/nior_n.c',
    'nsumdiff_n': 'mpn/generic/nsumdiff_n.c',
    'perfect_square_p': 'mpn/generic/perfect_square_p.c',
    'popcount': 'mpn/generic/popcount.c',
    'pow_1': 'mpn/generic/pow_1.c',
    'powlo': 'mpn/generic/powlo.c',
    'powm': 'mpn/generic/powm.c',
    'preinv_divrem_1': 'mpn/generic/preinv_divrem_1.c',
    'preinv_mod_1': 'mpn/generic/preinv_mod_1.c',
    'random': 'mpn/generic/random.c',
    'random2': 'mpn/generic/random2.c',
    'randomb': 'mpn/generic/randomb.c',
    'redc_1': 'mpn/generic/redc_1.c',
    'addmul_2': 'mpn/generic/redc_2.c',
    'redc_2': 'mpn/generic/redc_2.c',
    'redc_n': 'mpn/generic/redc_n.c',
    'rootrem': 'mpn/generic/rootrem.c',
    'rootrem_basecase': 'mpn/generic/rootrem_basecase.c',
    'rrandom': 'mpn/generic/rrandom.c',
    'rsh_divrem_hensel_qr_1': 'mpn/generic/rsh_divrem_hensel_qr_1.c',
    'rsh_divrem_hensel_qr_1_1': 'mpn/generic/rsh_divrem_hensel_qr_1_1.c',
    'rsh_divrem_hensel_qr_1_2': 'mpn/generic/rsh_divrem_hensel_qr_1_2.c',
    'rshift': 'mpn/generic/rshift.c',
    'sb_bdiv_q': 'mpn/generic/sb_bdiv_q.c',
    'sb_bdiv_qr': 'mpn/generic/sb_bdiv_qr.c',
    'sb_div_q': 'mpn/generic/sb_div_q.c',
    'sb_div_qr': 'mpn/generic/sb_div_qr.c',
    'sb_divappr_q': 'mpn/generic/sb_divappr_q.c',
    'scan0': 'mpn/generic/scan0.c',
    'scan1': 'mpn/generic/scan1.c',
    'bc_set_str': 'mpn/generic/set_str.c',
    'dc_set_str': 'mpn/generic/set_str.c',
    'set_str': 'mpn/generic/set_str.c',
    'set_str_compute_powtab': 'mpn/generic/set_str.c',
    'sizeinbase': 'mpn/generic/sizeinbase.c',
    'sqr_basecase': 'mpn/generic/sqr_basecase.c',
    'sqrtrem': 'mpn/generic/sqrtrem.c',
    'sub': 'mpn/generic/sub.c',
    'sub_1': 'mpn/generic/sub_1.c',
    'sub_err1_n': 'mpn/generic/sub_err1_n.c',
    'sub_err2_n': 'mpn/generic/sub_err2_n.c',
    'sub_n': 'mpn/generic/sub_n.c',
    'subadd_n': 'mpn/generic/subadd_n.c',
    'submul_1': 'mpn/generic/submul_1.c',
    'sumdiff_n': 'mpn/generic/sumdiff_n.c',
    'tdiv_q': 'mpn/generic/tdiv_q.c',
    'tdiv_qr': 'mpn/generic/tdiv_qr.c',
    'toom32_mul': 'mpn/generic/toom3_mul.c',
    'toom3_interpolate': 'mpn/generic/toom3_mul.c',
    'toom3_mul': 'mpn/generic/toom3_mul.c',
    'toom42_mul': 'mpn/generic/toom3_mul.c',
    'toom3_mul_n': 'mpn/generic/toom3_mul_n.c',
    'toom3_sqr_n': 'mpn/generic/toom3_mul_n.c',
    'toom42_mulmid': 'mpn/generic/toom42_mulmid.c',
    'toom4_mul': 'mpn/generic/toom4_mul.c',
    'toom53_mul': 'mpn/generic/toom4_mul.c',
    'toom4_interpolate': 'mpn/generic/toom4_mul_n.c',
    'toom4_mul_n': 'mpn/generic/toom4_mul_n.c',
    'toom4_sqr_n': 'mpn/generic/toom4_mul_n.c',
    'toom8_sqr_n': 'mpn/generic/toom8_sqr_n.c',
    'toom8h_mul': 'mpn/generic/toom8h_mul.c',
    'toom_couple_handling': 'mpn/generic/toom_couple_handling.c',
    'toom_eval_dgr3_pm1': 'mpn/generic/toom_eval_dgr3_pm1.c',
    'toom_eval_dgr3_pm2': 'mpn/generic/toom_eval_dgr3_pm2.c',
    'toom_eval_pm1': 'mpn/generic/toom_eval_pm1.c',
    'toom_eval_pm2': 'mpn/generic/toom_eval_pm2.c',
    'toom_eval_pm2exp': 'mpn/generic/toom_eval_pm2exp.c',
    'toom_eval_pm2rexp': 'mpn/generic/toom_eval_pm2rexp.c',
    'toom_interpolate_16pts': 'mpn/generic/toom_interpolate_16pts.c',
    'udiv_w_sdiv': 'mpn/generic/udiv_w_sdiv.c',
    'urandomb': 'mpn/generic/urandomb.c',
    'urandomm': 'mpn/generic/urandomm.c',
    'xnor_n': 'mpn/generic/xnor_n.c',
    'xor_n': 'mpn/generic/xor_n.c',
    'zero': 'mpn/generic/zero.c',
    'zero_p': 'mpn/generic/zero_p.c',
}

